#!/bin/bash

# 1a path of script
MTT_SCRIPT="/usr/bin/mtt"
# 1b path to man page
MAN_PAGE="/usr/share/man/man1/mtt.1"
# Trash paths
TRASH_FILES="$HOME/.local/share/Trash/files"
TRASH_INFO="$HOME/.local/share/Trash/info"

#requirements
#mail

#extra functionality
check_sudo() {

    if [ "$(id -u)" != "0" ]; then
        color_text "red" "This script requires sudo privileges to install/uninstall to $(dirname $MTT_SCRIPT)."
        color_text "yellow" "Re-running the script with sudo..."
        sleep 1
        exec sudo bash "$0" "$@"
        ORIG_USER="${SUDO_USER:-$USER}"
    fi
}

# 1a path of script
# Generates script and man page
create_mtt_script() {


if mtt_installed; then 
    installed_prompt
    return 0
fi


# Generating script
    cat << 'EOF' > "$MTT_SCRIPT" #pending lets just put teh final path not temp
#!/bin/bash
# Dummy mtt command for demonstration
echo "mtt command executed"
EOF

# Generating man page
    cat << 'EOF' > "$MAN_PAGE" #pending lets just put teh final path not temp
.TH MTT 1 "2025-08-27" "mtt version 1.0" "User Commands"
.SH NAME
mtt \- manage trash files
.SH SYNOPSIS
.B mtt
.SH DESCRIPTION
.B mtt
is a command to manage trash files on Unix-like systems.
.SH AUTHOR
Written for system automation.
EOF

chmod +x "$MTT_SCRIPT"
chown $ORIG_USER: "$MTT_SCRIPT" #make sure file is not root owned


color_text "green" "mtt installed successfully."

sudo -u "$SUDO_USER" bash -c 'configure_mtt'

}


# Check if mtt is already installed

mtt_installed() {
    if [ -f "$MTT_SCRIPT" ]; then
        #echo "mtt is already installed at $MTT_SCRIPT."
        return 0
    else
        #echo "mtt not installed at $MTT_SCRIPT."
        return 1
    fi
}

installed_prompt() {
    color_text "green" "mtt command-script is already installed."
    color_text "yellow" "Choose an option:"
    echo "1) Uninstall the mtt command-script"
    echo "2) Reconfigure the mtt command-script"
    echo "3) Quit"
    read -rp "Enter choice [1-3]: " choice
    case "$choice" in
        1)
            color_text "yellow" "Uninstalling mtt..."
            sleep 1
            uninstall_mtt
            # call uninstall function here
            ;;
        2)
            color_text "yellow" "Reconfiguring mtt..."
            sleep 1
            configure_mtt
            ;;
        3)
            color_text "red" "Quitting."
            sleep 1
            exit 0
            ;;
        *)
            color_text "red" "Invalid choice. Please run the script again."
            exit 1
            ;;
    esac
}

uninstall_mtt(){

    if other_users_mtt; then
        color_text "red" "mtt is installed by another user. Cannot uninstall."
        return 1
    fi

    if mtt_installed; then
        rm -f "$MTT_SCRIPT" "$MAN_PAGE"
        color_text "green" "mtt uninstalled successfully."
    else
        color_text "red" "mtt is not installed."
    fi
}

other_users_mtt() {
    local current_uid
    current_uid=$(id -u)

    if [ -f "$MTT_SCRIPT" ] && [ "$(stat -c "%u" "$MTT_SCRIPT")" -ne "$current_uid" ]; then
        return 0  # another user owns the file
    else
        return 1  # current user owns it or file doesnâ€™t exist
    fi
}

configure_mtt() {
    echo "Do you want the Trash to empty automatically? (y/n)"
    read -r auto_empty

    if [[ "$auto_empty" =~ ^[yY] ]]; then
        color_text "yellow" "Choose how to empty the Trash (files older than 30 days only):"
        echo "1) Every day at 9am"
        echo "2) Only on the first day of every month"
        read -r choice

        # Set the base schedule
        case "$choice" in
            1)
                CRON_ENTRY="0 9 * * * find $TRASH_FILES $TRASH_INFO -type f -mtime +30 -exec rm -f {} \; #9am"                                                                    
                (crontab -l 2>/dev/null | grep -v 'monthly'; echo "$CRON_ENTRY") | crontab -u "hector.rodriguez" -
                #(crontab -l 2>/dev/null | grep -v 'monthly'; echo "$CRON_ENTRY") | crontab -u $(echo "$SUDO_USER") -
                ;;                                                                           #"$SUDO_USER" alone did not work
            2)
                CRON_ENTRY="0 9 1 * * find $TRASH_FILES $TRASH_INFO -type f -mtime +30 -exec rm -f {} \; #monthly"
                (crontab -l | grep -v "9am"; echo "$CRON_ENTRY") | crontab -u "hector.rodriguez" - 
                #(crontab -l | grep -v "9am"; echo "$CRON_ENTRY") | crontab -u $(echo "$SUDO_USER") - 
                ;;                                                           #"$SUDO_USER" alone did not work
            *)
                color_text "red" "Invalid choice. No schedule set." >&2
                return 1
                ;;
        esac

        color_text "green" "Scheduled Trash cleanup finshed."
    else
        echo "Trash will NOT be emptied automatically."
    fi
}

color_text() {
    local color="$1"
    local text="$2"

    case "$color" in
        red) code="31" ;;
        green) code="32" ;;
        yellow) code="33" ;;
        blue) code="34" ;;
        magenta) code="35" ;;
        cyan) code="36" ;;
        *) code="0" ;; # default (no color)
    esac

    echo -e "\e[${code}m${text}\e[0m"
}


##################
# Testing area
#Need sudo to write to /usr/bin and /usr/share create check

check_sudo
create_mtt_script
#other_users_mtt
#echo $? fd
